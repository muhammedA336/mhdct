java -jar jenkins.war --version\

ping github.com\

git config --global http.postBuffer 1048576000\

df -h\

git clone https://github.com/muhammedA336/mylist.git\

git config --global http.postBuffer 1048576000\
\

git config --global fetch.timeout 600\

git config --global http.proxy http://your.proxy:8080\
git config --global https.proxy https://your.proxy:8080\

git remote set-url origin git@github.com:username/repo.git\

df -h\

git fetch --all\

clear
ssh-add -l\

eval "$(ssh-agent -s)"\

ssh-add ~/.ssh/id_ed25519\

ls -al ~/.ssh/\

ssh-keygen -t ed25519 -C "mhdspectrum123@gmail.com"\
\

ssh-add ~/.ssh/id_ed25519\

cat ~/.ssh/id_ed25519.pub\

ssh -T git@github.com\

ssh-add -l\

cat ~/.ssh/id_ed25519.pub\

ssh -T git@github.com\

git clone git@github.com:muhammedA336/mylist.git\

clear
git config --global http.postBuffer 1048576000\

git config --global fetch.timeout 600\

git gc --prune=now\
git remote prune origin\

df -h\

git config --global http.proxy http://your.proxy:8080\
git config --global https.proxy https://your.proxy:8080\

rm -rf mylist  # Remove the existing repository folder\
git clone https://github.com/muhammedA336/mylist.git  # Clone again\

git clone https://github.com/muhammedA336/mylist.git\

git clone git@github.com:muhammedA336/mylist.git\

git config --global fetch.timeout 600\

git config --global http.postBuffer 524288000\
git config --global http.timeout 600\

clear
git config --global fetch.timeout 1200  # Set this to 20 minutes (1200 seconds)\

git config --global http.postBuffer 524288000  # Increase buffer size to 500 MB\

git config --global clone.depth 1\

git config --global http.proxy http://your.proxy:8080\
git config --global https.proxy https://your.proxy:8080\

df -h\

free -m\

git fetch --all\

git remote -v\

git remote set-url origin https://github.com/muhammedA336/mylist.git\

ssh -T git@github.com\

git fetch --all\

git config --global --get http.proxy\
git config --global --get https.proxy\

http://your.proxy:8080
https://your.proxy:8080
git config --global --unset http.proxy\
git config --global --unset https.proxy\

git config --global --get http.proxy\
git config --global --get https.proxy\

git fetch --all\

git config --global http.lowSpeedLimit 0\
git config --global http.lowSpeedTime 999999\

git clone https://github.com/muhammedA336/mylist.git
ls -l
tree
clear
ls -l
ls  Downloads
git init
git add .
git rm --cached my-project\

git add .\

git commit -m "Add pom.xml"\

git remote add origin https://github.com/muhammedA336/mavvvvvvvva.git\

git remote -v\

git remote set-url origin https://github.com/muhammedA336/mavvvvvvvva.git\

git remote -v\

git push -u origin main\

git branch\

git push -u origin master\

git pull origin master\

git pull --rebase origin master
git add .
git rm --cached combined-project\
git rm --cached my-all-files\

git rm -f --cached combined-project\
git rm -f --cached my-all-files\

git commit -m "Removed embedded repositories (combined-project and my-all-files)"\

git push origin master\

git pull origin master\

git status\

git add .\

git rm --cached combined-project\
git rm --cached my-all-files\

clear
git rm --cached -f combined-project\
git rm --cached -f my-all-files\

git restore --staged combined-project\
git restore --staged my-all-files\

git log --combined-project -- my-all-files\

git log -- combined-project\
git log -- my-all-files\

git log --stat -- combined-project\
git log --stat -- my-all-files\

git checkout abc123 -- combined-project my-all-files\

fatal: invalid reference: abc123
git log -- combined-project\
git log -- my-all-files\

git checkout abc1234567890abcdef -- combined-project my-all-files\

clear
git log -- combined-project\
git log -- my-all-files\

git log\

git checkout c8ccb3c\

clear
git stash\
git checkout c8ccb3c -- combined-project my-all-files\

git checkout c8ccb3c\

ls my-project\

rm -rf my-project/src\

git add my-project/pom.xml\
git rm -r --cached my-project/src\

git add my-project/pom.xml\
git commit -m "Retain pom.xml, remove src directory"\

git config --global user.name "muhammedA336"\
git config --global user.email "mhdspectrum123@"\

git commit -m "Retain pom.xml, remove src directory"\

git rebase --continue\

git commit --amend\

git add my-project/pom.xml\

git rm -r --cached my-project/src\

clear
git rm -r --cached my-project/src\

git check-ignore -v my-project/src\

rm -rf my-project/src\

git status\

git diff --cached\

git rm -r --cached my-project/src\

git status\

git add .
git rm --cached combined-project\
git rm --cached my-all-files\
git rm --cached my-project\

git rm -r --cached -f combined-project\
git rm -r --cached -f my-all-files\
git rm -r --cached -f my-project\

echo "combined-project/" >> .gitignore\
echo "my-all-files/" >> .gitignore\
echo "my-project/" >> .gitignore\

git add .gitignore\
git commit -m "Remove nested repositories from tracking and add them to .gitignore"\

git add my-project/pom.xml\
git commit -m "Retain pom.xml, remove src directory"\

git add my-project/pom.xml\
git status  # Check that only pom.xml is staged\

git commit -m "Retain pom.xml, remove src directory"\

git push --force-with-lease origin master\

clear
shutdown now
